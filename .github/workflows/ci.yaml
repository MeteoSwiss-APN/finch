name: "Continuous Integration"

on:
  workflow_call:
    outputs:
      docs_cache:
        description: "The cache key of the cached build of the documentation"
        value: ${{ jobs.build_docs.outputs.cache }}
  pull_request:
    branches:
      - "main"

jobs:

  install_env:
    runs-on: ubuntu-latest
    # https://github.com/marketplace/actions/setup-miniconda#use-a-default-shell
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dev_env


  package_conda:
    runs-on: ubuntu-latest
    needs: install_env
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      # setup environment for installation later on
      - uses: ./.github/actions/mamba
        id: install_env
        with:
          env_name: finch_pkg
      # build the package
      - uses: ./.github/actions/dev_env
      - name: Build Package
        run: |
          conda mambabuild -c conda-forge conda
      # install the package in the install environment
      - name: Installing Package
        run: |
          mamba install -c local -c conda-forge -p ${{ steps.install_env.outputs.env_path }} finch_mch

  package_pip:
    runs-on: ubuntu-latest
    needs: install_env
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dev_env
      - name: Install Package
        run: |
          python setup.py install

  build_docs:
    runs-on: ubuntu-latest
    needs: install_env
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dev_env
        with:
          install-finch: true
          install-zebra: true
      - name: Sphinx build
        run: |
          sphinx-build docs/sphinx/source docs/sphinx/build
      # store in artifact
      - uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/sphinx/build

  pre-commit:
    runs-on: ubuntu-latest
    needs: install_env
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dev_env
        with:
          install-zebra: true
      - uses: pre-commit/action@v3.0.0

  test:
    runs-on: ubuntu-latest
    needs: install_env
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/dev_env
        with:
          install-finch: true
          install-zebra: true
      - name: Run Unit Tests
        run: |
          pytest
